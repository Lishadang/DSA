Given an integral number N. The task is to find the count of digits present in this number.
N = 2019

Number of digits in N here is 4 and,
the digits are: 2, 0, 1, 9.
  Check if the number N is not equals to zero.
  Increase the count of digits by 1 if N is not zero.
  Reduce the number by dividing it by 10.
  Repeat the above steps until the number is reduced to zero.
N not equals to 0
Increment digitsCount, digitsCount = digitsCount + 1.
digitsCount = 0 + 1 = 1.
N = N/10 = 58964/10 = 5896.

complexity of the solution is O(digitsCount).

Solution 2
number of digits in N = log10(N) + 1.
complexity of the solution is O(1).

Python code
import math 
  
def countDigit(n): 
    return math.floor(math.log(n, 10)+1) 
  
# Driver Code 
n = 345289467
print ("Number of digits : % d"%(countDigit(n))) 

def countDigit(n): 
    count = 0
    while n != 0: 
        n //= 10
        count+= 1
    return count 
# Driver Code     
n = 345289467
print ("Number of digits : % d"%(countDigit(n))) 


  
def count_digits(n): 
    n = str(n) 
    return len(n) 
  
# Driver code 
n = 456533457776
print(count_digits(n))

def countDigit(n): 
    if n == 0: 
        return 0
    return 1 + countDigit(n // 10) 
  
# Driver Code     
n = 345289467
print ("Number of digits : % d"%(countDigit(n))) 

